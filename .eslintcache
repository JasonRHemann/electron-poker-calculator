[{"/Users/User/Desktop/electron-poker-calculator/src/index.js":"1","/Users/User/Desktop/electron-poker-calculator/src/App.js":"2","/Users/User/Desktop/electron-poker-calculator/src/reportWebVitals.js":"3","/Users/User/Desktop/electron-poker-calculator/src/screenReader/HandReader.js":"4"},{"size":500,"mtime":1607349555000,"results":"5","hashOfConfig":"6"},{"size":360,"mtime":1607349555000,"results":"7","hashOfConfig":"6"},{"size":362,"mtime":1607349555000,"results":"8","hashOfConfig":"6"},{"size":786,"mtime":1607381238000,"results":"9","hashOfConfig":"6"},{"filePath":"10","messages":"11","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"12"},"z2t3s9",{"filePath":"13","messages":"14","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"12"},{"filePath":"15","messages":"16","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"12"},{"filePath":"17","messages":"18","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"19"},"/Users/User/Desktop/electron-poker-calculator/src/index.js",[],["20","21"],"/Users/User/Desktop/electron-poker-calculator/src/App.js",[],"/Users/User/Desktop/electron-poker-calculator/src/reportWebVitals.js",[],"/Users/User/Desktop/electron-poker-calculator/src/screenReader/HandReader.js",["22"],"import React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\n\nconst HandReader = () => {\n  const [cardOneArray, setCardOneArray] = useState([]);\n\n  useEffect(() => {\n    axios.get(\"http://localhost:3001/users\").then((response) => {\n      setCardOneArray(response.data);\n      console.log(\"res\", response.data);\n    });\n  }, []);\n\n  console.log(\"card one\", cardOneArray);\n\n  let suitArrayColor = [\"c70000\", \"0089ce\", \"329f28\", \"000000\", \"444444\"];\n  let suitArray = [\"Heart\", \"Diamond\", \"Club\", \"Spade\", \"No Cards\"];\n\n  var indexOfMatch = suitArrayColor.indexOf(cardOneArray.toString());\n  console.log(indexOfMatch);\n  let cardOneSuit = (\"suit\", suitArray[indexOfMatch]);\n\n  return (\n    <div>\n      <p>{cardOneArray}</p>\n    </div>\n  );\n};\n\nexport default HandReader;\n",{"ruleId":"23","replacedBy":"24"},{"ruleId":"25","replacedBy":"26"},{"ruleId":"27","severity":1,"message":"28","line":21,"column":7,"nodeType":"29","messageId":"30","endLine":21,"endColumn":18},"no-native-reassign",["31"],"no-negated-in-lhs",["32"],"no-unused-vars","'cardOneSuit' is assigned a value but never used.","Identifier","unusedVar","no-global-assign","no-unsafe-negation"]